{"version":3,"sources":["logo.svg","components/Chart.js","components/Plot.js","components/BarChart.js","components/Controller.js","App.js","reportWebVitals.js","index.js"],"names":["Chart","props","svgRef","React","createRef","state","setyear","bind","tick","datafiltered","this","median_childmortality","filter","x","year","datafiltered2","median_income","scalex","d3","domain","range","scaley","scaley_2","html","append","attr","selectAll","data","enter","d","i","median_val","call","tickFormat","tickValues","a","console","log","incomedata","cm_data","index","year_income","map","cm_country","find","y","country","undefined","isNaN","child_mortality","reducer","accumulator","currentValue","parseFloat","sum_cm","reduce","push","length","sum_income","income","updatechart","timerID","setInterval","clearInterval","setState","prevState","prevProps","event","target","value","for","type","min","max","step","id","onInput","name","width","height","ref","Component","Plot","y_domain","radius","BarChart","Controller","setscene","scene","onClick","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6e128db.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\nimport * as d3 from \"d3\";\n\nexport class Chart extends Component {\n    constructor(props) {\n        super(props);\n        this.svgRef = React.createRef();\n\n        this.state = {\n            'year': 1800\n        }\n        this.setyear =this.setyear.bind(this);\n        this.tick =this.tick.bind(this);\n    }    \n\n    updatechart()\n    {\n        let y_domain = 500;\n        let radius = 1.5;\n        // if (this.state.year == 2021 && this.timerID === null) {\n        //     y_domain = 150;\n        //     radius = 3;\n        // }\n\n        let datafiltered = this.median_childmortality.filter(\n            x => x.year <= this.state.year\n        )\n\n        let datafiltered2 = this.median_income.filter(\n            x => x.year <= this.state.year\n        )\n\n        const scalex = d3.scaleLinear()\n        .domain([1800,2040])\n        .range([0,700])\n        const scaley = d3.scaleLinear()\n        .domain([0,y_domain])\n        .range([300,0])\n\n        const scaley_2 = d3.scaleLog()\n        .domain([200,179000])\n        .range([300,0])\n\n        d3.select('#scatter').html(\"\");\n        d3.select('#scatter').append('g')\n        .attr('transform','translate(50,50)')\n        .selectAll('circle')\n        .data(datafiltered)\n        .enter()\n        .append('circle')\n        .attr('cx',function(d,i) { return scalex(d.year); })\n        .attr('cy',function(d,i) { return scaley(d.median_val); })\n        .attr('r',function(d,i) { return radius; })\n        .attr('fill', function(d,i) {\n            if (d.year > 2021) {\n                return 'red';\n            }\n                return 'lightblue';\n            }\n        )\n    \n        d3.select('#scatter').append('g')\n        .attr('transform','translate(50,50)')\n        .call(\n            d3.axisLeft(scaley)\n            // .tickValues([10,100,1000,10000, 100000])\n            .tickFormat(d3.format(\"~s\"))\n        )\n        d3.select('svg').append('g')\n        .attr('transform','translate(50,350)')\n        .call(\n            d3.axisBottom(scalex)\n            // .tickValues([300,1000,3000,10000, 30000, 100000])\n            // .tickFormat(d3.format(\"~s\"))\n        )\n\n        d3.select('#scatter').append('g')\n        .attr('transform','translate(50,450)')\n        .selectAll('circle')\n        .data(datafiltered2)\n        .enter()\n        .append('circle')\n        .attr('cx',function(d,i) { return scalex(d.year); })\n        .attr('cy',function(d,i) { return scaley_2(d.median_val); })\n        .attr('r',function(d,i) { return radius; })\n        .attr('fill', function(d,i) {\n            if (d.year > 2021) {\n                return 'red';\n            }\n                return 'lightblue';\n            }\n        )\n    \n        d3.select('#scatter').append('g')\n        .attr('transform','translate(50,450)')\n        .call(\n            d3.axisLeft(scaley_2)\n            .tickValues([300,1000,3000,10000,30000, 100000])\n            .tickFormat(d3.format(\"~s\"))\n        )\n        d3.select('svg').append('g')\n        .attr('transform','translate(50,750)')\n        .call(\n            d3.axisBottom(scalex)\n            // .tickValues([300,1000,3000,10000, 30000, 100000])\n            // .tickFormat(d3.format(\"~s\"))\n        )\n        \n\n    }\n\n    async componentDidMount()\n    {\n        console.log('chart mounted')\n        this.incomedata = await d3.csv('/income_processed.csv');\n        // console.log(this.incomedata);\n        this.cm_data = await d3.csv('/child_mortality_0_5_year_olds_dying_per_1000_born.csv');\n        // console.log(this.cm_data);\n        this.median_childmortality = []\n        this.median_income = []\n\n        for (let index = 1800; index < 2041; index++) {\n            let year_income = this.incomedata.map(\n                (x) => {                 \n                    let cm_country = this.cm_data.find(y => y.country === x.country);\n                    if (cm_country === undefined) {\n                        return null;\n                    }\n                    if (isNaN(x[index]) || isNaN(cm_country[index]))\n                    {\n                        return null;\n                    }\n                    return {'country': x.country, 'income': x[index], 'child_mortality': cm_country[[index]]} \n                }\n            ).filter(\n                x => {\n                    if (x.child_mortality > 0) return true;\n                    return false;\n                }\n            )\n\n            // console.log(year_income.length)\n            const reducer = (accumulator, currentValue) => accumulator + parseFloat(currentValue);\n            let sum_cm = year_income.map(\n                x => x.child_mortality\n            ).reduce(reducer, 0)\n            // console.log(sum_cm)\n\n            this.median_childmortality.push({'year': index, 'median_val': sum_cm / year_income.length})\n\n            let sum_income = year_income.map(\n                x => x.income\n            ).reduce(reducer, 0)\n            this.median_income.push({'year': index, 'median_val': sum_income / year_income.length})\n        }\n        console.log(this.median_childmortality);\n        console.log(this.median_income);\n\n        this.updatechart();\n        this.timerID = setInterval(\n            () => this.tick(),\n            25\n        );      \n    }\n\n    componentWillUnmount() {\n        console.log('Unmounting')\n        clearInterval(this.timerID);\n        this.timerID = null;\n        d3.select('#scatter').html(\"\");\n    }    \n\n    componentDidUpdate()\n    {\n        this.updatechart();\n    }\n\n    tick()\n    {\n        if (this.state.year >= 2040)\n        {\n            clearInterval(this.timerID);\n            this.timerID = null;\n            // this.setState((prevState, prevProps) => {\n            //     return {\n            //         'year': 2021\n            //     };\n            // }\n            // )\n            return;\n        }\n        this.setState((prevState, prevProps) => {\n            return {\n                'year': prevState.year + 1\n            };\n        }\n        )\n    }\n\n    setyear(event)\n    {\n        clearInterval(this.timerID);\n        this.timerID = null;\n        this.setState({'year': event.target.value});\n\n    }\n\n    render() {\n        return (\n            <div>\n                <form>\n                    <label for=\"year\">Please select a year: </label>\n                    <input type=\"range\" min={1800} max={2040} step={1} id=\"year\" value={this.state.year} onInput={this.setyear} />\n                    <output name=\"selected_year\" id=\"selected_year\">{this.state.year}</output>\n                </form>\n\n                <svg id='scatter' width={800} height={800} ref = {this.svgRef}>\n\n                </svg>\n            </div>\n        )\n    }\n}\n\nexport default Chart\n","import React, { Component } from 'react'\nimport * as d3 from \"d3\";\n\nexport class Plot extends Component {\n    constructor(props) {\n        super(props);\n        this.svgRef = React.createRef();\n\n        this.state = {\n            'year': 1800\n        }\n        this.setyear =this.setyear.bind(this);\n        this.tick =this.tick.bind(this);\n    }    \n\n    updatechart()\n    {\n        const year_income = this.incomedata.map(\n            (x) => {                 \n                let cm_country = this.cm_data.find(y => y.country === x.country);\n                if (cm_country === undefined) {\n                    return null;\n                }\n                if (isNaN(x[this.state.year]) || isNaN(cm_country[this.state.year]))\n                {\n                    return null;\n                }\n                return {'country': x.country, 'income': x[this.state.year], 'child_mortality': cm_country[[this.state.year]]} \n            }\n        ).filter(\n            x => {\n                if (x.child_mortality > 0) return true;\n                return false;\n            }\n        )\n        // console.log(year_income);\n\n        let y_domain = 1000;\n        let radius = 1.5;\n        if (this.timerID === null) {\n            if (this.state.year == 2021) {\n                y_domain = 150;\n            }\n            radius = 3;\n        }\n\n        const scalex = d3.scaleLog()\n        .domain([200,179000])\n        .range([0,700])\n        const scaley = d3.scaleLinear()\n        .domain([0,y_domain])\n        .range([700,0])\n\n        d3.select('#scatter').html(\"\");\n        d3.select('#scatter').append('g')\n        .attr('transform','translate(50,50)')\n        .selectAll('circle')\n        .data(year_income)\n        .enter()\n        .append('circle')\n        .attr('cx',function(d,i) { return scalex(d.income); })\n        .attr('cy',function(d,i) { return scaley(d.child_mortality); })\n        .attr('r',function(d,i) { return radius; })\n        .attr('fill', 'lightblue')\n    \n        d3.select('#scatter').append('g')\n        .attr('transform','translate(50,50)')\n        .call(\n            d3.axisLeft(scaley)\n            // .tickValues([10,100,1000,10000, 100000])\n            .tickFormat(d3.format(\"~s\"))\n        )\n        d3.select('svg').append('g')\n        .attr('transform','translate(50,750)')\n        .call(\n            d3.axisBottom(scalex)\n            .tickValues([300,1000,3000,10000, 30000, 100000])\n            .tickFormat(d3.format(\"~s\"))\n        )\n        \n    }\n\n    async componentDidMount()\n    {\n        // console.log('plot mounted')\n        this.incomedata = await d3.csv('/income_processed.csv');\n        // console.log(this.incomedata);\n        this.cm_data = await d3.csv('/child_mortality_0_5_year_olds_dying_per_1000_born.csv');\n        // console.log(this.cm_data);\n\n        this.updatechart();\n        this.timerID = setInterval(\n            () => this.tick(),\n            25\n        );      \n    }\n\n    componentWillUnmount() {\n        console.log('Unmounting')\n        clearInterval(this.timerID);\n        this.timerID = null;\n        d3.select('#scatter').html(\"\");\n    }    \n\n    componentDidUpdate()\n    {\n        this.updatechart();\n    }\n\n    tick()\n    {\n        if (this.state.year >= 2040)\n        {\n            clearInterval(this.timerID);\n            this.timerID = null;\n            this.setState((prevState, prevProps) => {\n                return {\n                    'year': 2021\n                };\n            }\n            )\n            return;\n        }\n        this.setState((prevState, prevProps) => {\n            return {\n                'year': prevState.year + 1\n            };\n        }\n        )\n    }\n\n    setyear(event)\n    {\n        clearInterval(this.timerID);\n        this.timerID = null;\n        this.setState({'year': event.target.value});\n\n    }\n\n    render() {\n        return (\n            <div>\n                <form>\n                    <label for=\"year\">Please select a year: </label>\n                    <input type=\"range\" min={1800} max={2040} step={1} id=\"year\" value={this.state.year} onInput={this.setyear} />\n                    <output name=\"selected_year\" id=\"selected_year\">{this.state.year}</output>\n                </form>\n\n                <svg id='scatter' width={800} height={800} ref = {this.svgRef}>\n\n                </svg>\n            </div>\n        )\n    }\n}\n\nexport default Plot\n","import React, { Component } from 'react'\nimport * as d3 from \"d3\";\n\nexport class BarChart extends Component {\n    constructor(props) {\n        super(props);\n        this.svgRef = React.createRef();\n\n        this.state = {\n            'year': 1800\n        }\n        this.setyear =this.setyear.bind(this);\n        this.tick =this.tick.bind(this);\n    }    \n\n    updatechart()\n    {\n        let y_domain = 500;\n        let radius = 1.5;\n        // if (this.state.year == 2021 && this.timerID === null) {\n        //     y_domain = 150;\n        //     radius = 3;\n        // }\n\n        let datafiltered = this.median_childmortality.filter(\n            x => x.year <= this.state.year\n        )\n\n        let datafiltered2 = this.median_income.filter(\n            x => x.year <= this.state.year\n        )\n\n        const scalex = d3.scaleLinear()\n        .domain([1800,2040])\n        .range([0,700])\n        const scaley = d3.scaleLinear()\n        .domain([0,y_domain])\n        .range([300,0])\n\n        const scaley_2 = d3.scaleLog()\n        .domain([200,179000])\n        .range([300,0])\n\n        d3.select('#scatter').html(\"\");\n        d3.select('#scatter').append('g')\n        .attr('transform','translate(50,50)')\n        .selectAll('circle')\n        .data(datafiltered)\n        .enter()\n        .append('circle')\n        .attr('cx',function(d,i) { return scalex(d.year); })\n        .attr('cy',function(d,i) { return scaley(d.median_val); })\n        .attr('r',function(d,i) { return radius; })\n        .attr('fill', function(d,i) {\n            if (d.year > 2021) {\n                return 'red';\n            }\n                return 'lightblue';\n            }\n        )\n    \n        d3.select('#scatter').append('g')\n        .attr('transform','translate(50,50)')\n        .call(\n            d3.axisLeft(scaley)\n            // .tickValues([10,100,1000,10000, 100000])\n            .tickFormat(d3.format(\"~s\"))\n        )\n        d3.select('svg').append('g')\n        .attr('transform','translate(50,350)')\n        .call(\n            d3.axisBottom(scalex)\n            // .tickValues([300,1000,3000,10000, 30000, 100000])\n            // .tickFormat(d3.format(\"~s\"))\n        )\n\n        d3.select('#scatter').append('g')\n        .attr('transform','translate(50,450)')\n        .selectAll('circle')\n        .data(datafiltered2)\n        .enter()\n        .append('circle')\n        .attr('cx',function(d,i) { return scalex(d.year); })\n        .attr('cy',function(d,i) { return scaley_2(d.median_val); })\n        .attr('r',function(d,i) { return radius; })\n        .attr('fill', function(d,i) {\n            if (d.year > 2021) {\n                return 'red';\n            }\n                return 'lightblue';\n            }\n        )\n    \n        d3.select('#scatter').append('g')\n        .attr('transform','translate(50,450)')\n        .call(\n            d3.axisLeft(scaley_2)\n            .tickValues([300,1000,3000,10000,30000, 100000])\n            .tickFormat(d3.format(\"~s\"))\n        )\n        d3.select('svg').append('g')\n        .attr('transform','translate(50,750)')\n        .call(\n            d3.axisBottom(scalex)\n            // .tickValues([300,1000,3000,10000, 30000, 100000])\n            // .tickFormat(d3.format(\"~s\"))\n        )\n        \n\n    }\n\n    async componentDidMount()\n    {\n        console.log('chart mounted')\n        this.incomedata = await d3.csv('/income_processed.csv');\n        // console.log(this.incomedata);\n        this.cm_data = await d3.csv('/child_mortality_0_5_year_olds_dying_per_1000_born.csv');\n        // console.log(this.cm_data);\n        this.median_childmortality = []\n        this.median_income = []\n\n        for (let index = 1800; index < 2041; index++) {\n            let year_income = this.incomedata.map(\n                (x) => {                 \n                    let cm_country = this.cm_data.find(y => y.country === x.country);\n                    if (cm_country === undefined) {\n                        return null;\n                    }\n                    if (isNaN(x[index]) || isNaN(cm_country[index]))\n                    {\n                        return null;\n                    }\n                    return {'country': x.country, 'income': x[index], 'child_mortality': cm_country[[index]]} \n                }\n            ).filter(\n                x => {\n                    if (x.child_mortality > 0) return true;\n                    return false;\n                }\n            )\n\n            // console.log(year_income.length)\n            const reducer = (accumulator, currentValue) => accumulator + parseFloat(currentValue);\n            let sum_cm = year_income.map(\n                x => x.child_mortality\n            ).reduce(reducer, 0)\n            // console.log(sum_cm)\n\n            this.median_childmortality.push({'year': index, 'median_val': sum_cm / year_income.length})\n\n            let sum_income = year_income.map(\n                x => x.income\n            ).reduce(reducer, 0)\n            this.median_income.push({'year': index, 'median_val': sum_income / year_income.length})\n        }\n        console.log(this.median_childmortality);\n        console.log(this.median_income);\n\n        this.updatechart();\n        this.timerID = setInterval(\n            () => this.tick(),\n            25\n        );      \n    }\n\n    componentWillUnmount() {\n        console.log('Unmounting')\n        clearInterval(this.timerID);\n        this.timerID = null;\n        d3.select('#scatter').html(\"\");\n    }    \n\n    componentDidUpdate()\n    {\n        this.updatechart();\n    }\n\n    tick()\n    {\n        if (this.state.year >= 2040)\n        {\n            clearInterval(this.timerID);\n            this.timerID = null;\n            // this.setState((prevState, prevProps) => {\n            //     return {\n            //         'year': 2021\n            //     };\n            // }\n            // )\n            return;\n        }\n        this.setState((prevState, prevProps) => {\n            return {\n                'year': prevState.year + 1\n            };\n        }\n        )\n    }\n\n    setyear(event)\n    {\n        clearInterval(this.timerID);\n        this.timerID = null;\n        this.setState({'year': event.target.value});\n\n    }\n\n    render() {\n        return (\n            <div>\n                <form>\n                    <label for=\"year\">Please select a year: </label>\n                    <input type=\"range\" min={1800} max={2040} step={1} id=\"year\" value={this.state.year} onInput={this.setyear} />\n                    <output name=\"selected_year\" id=\"selected_year\">{this.state.year}</output>\n                </form>\n\n                <svg id='scatter' width={800} height={800} ref = {this.svgRef}>\n\n                </svg>\n            </div>\n        )\n    }\n}\n\nexport default BarChart\n","import React, { Component } from 'react'\nimport Chart from './Chart.js';\nimport Plot from './Plot.js';\nimport BarChart from './BarChart.js';\n\nexport class Controller extends Component {\n    constructor(props) {\n        super(props);\n        this.svgRef = React.createRef();\n\n        this.state = {\n            'scene': 0\n        }\n        this.setscene = this.setscene.bind(this);\n    }    \n\n    setscene()\n    {\n        // clearInterval(this.timerID);\n        // this.timerID = null;\n        this.setState({'scene': (this.state.scene + 1) % 3});\n\n    }\n    \n    render() {\n        if (this.state.scene == 0) {\n            return (\n                <div>\n                    <button onClick={this.setscene}>Change</button>\n                    <Plot />\n                </div>\n            )          \n        } else if (this.state.scene == 1) {\n            return (\n                <div>\n                    <button onClick={this.setscene}>Change</button>\n                    <Chart />\n                </div>\n            )\n        }\n        else {\n            return (\n                <div>\n                    <button onClick={this.setscene}>Change</button>\n                    <BarChart />\n                </div>\n            )\n        }\n    }\n}\n\nexport default Controller\n","import logo from './logo.svg';\nimport './App.css';\nimport Controller from './components/Controller.js';\nimport * as d3 from \"d3\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Controller />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}